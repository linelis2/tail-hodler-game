"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./src/components/TokenToss.js":
/*!*************************************!*\
  !*** ./src/components/TokenToss.js ***!
  \*************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @solana/wallet-adapter-react */ \"./node_modules/@solana/wallet-adapter-react/lib/esm/index.js\");\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _solana_spl_token__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @solana/spl-token */ \"./node_modules/@solana/spl-token/lib/esm/index.js\");\n/* harmony import */ var _tatumio_tatum__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @tatumio/tatum */ \"./node_modules/@tatumio/tatum/dist/src/main.js\");\n/* harmony import */ var _tatumio_tatum__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_tatumio_tatum__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _game_JackpotDisplay__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./game/JackpotDisplay */ \"./src/components/game/JackpotDisplay.js\");\n/* harmony import */ var _game_GameControls__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./game/GameControls */ \"./src/components/game/GameControls.js\");\n/* harmony import */ var _game_GameHistory__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./game/GameHistory */ \"./src/components/game/GameHistory.js\");\n/* harmony import */ var _game_GameAnimations__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./game/GameAnimations */ \"./src/components/game/GameAnimations.js\");\n/* harmony import */ var _game_GameResult__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./game/GameResult */ \"./src/components/game/GameResult.js\");\n/* harmony import */ var _game_GameHeader__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./game/GameHeader */ \"./src/components/game/GameHeader.js\");\n/* harmony import */ var _game_AdminControls__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./game/AdminControls */ \"./src/components/game/AdminControls.js\");\n\nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n\n\n\n\n\n// Constants\nconst TAIL_DECIMALS = 6;\nconst DECIMAL_MULTIPLIER = Math.pow(10, TAIL_DECIMALS);\nconst TAIL_TOKEN_ADDRESS = \"CrbhNV4SUon8QVgCyQg7Khgy6GgcEy8ACDjkKvPrpump\";\nconst LOBBY_WALLET_ADDRESS = \"EBTvDaV5eHmrumHTMABxcWFXyri9c9VPGSaqYYfsQ64F\";\nconst JACKPOT_PROBABILITY = 0.2; // 1/5 chance to win jackpot (for testing)\n// Security Constants\nconst RATE_LIMIT = {\n    maxPlays: 5,\n    timeWindow: 60000,\n    minBet: 100,\n    maxBet: 100000\n};\n// Global state for pending transactions and rate limiting\nconst pendingTransactions = new Set();\nconst recentPlays = new Map(); // wallet -> [{timestamp}]\nconst suspiciousWallets = new Set(); // Track suspicious behavior\n// Add API URL constant\nconst API_URL = \"http://localhost:3001/api\" || 0;\nconst TokenToss = ()=>{\n    _s();\n    const { publicKey, sendTransaction } = (0,_solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_11__.useWallet)();\n    const { connection } = (0,_solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_11__.useConnection)();\n    const [balance, setBalance] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(0);\n    const [betAmount, setBetAmount] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(()=>{\n        if (true) {\n            const savedBetAmount = localStorage.getItem(\"tailhodler_betAmount\");\n            return savedBetAmount ? parseInt(savedBetAmount) : 100;\n        }\n        return 100;\n    });\n    const [result, setResult] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(\"\");\n    const [isProcessing, setIsProcessing] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    const [tatum, setTatum] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const [gameHistory, setGameHistory] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(()=>{\n        if (true) {\n            const savedHistory = localStorage.getItem(\"tailhodler_gameHistory\");\n            return savedHistory ? JSON.parse(savedHistory) : [];\n        }\n        return [];\n    });\n    const [jackpotBalance, setJackpotBalance] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const [isGamePaused, setIsGamePaused] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    const [cooldownTime, setCooldownTime] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(0);\n    const [jackpotPendingInfo, setJackpotPendingInfo] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    // Security check functions\n    const checkRateLimit = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)((walletAddress)=>{\n        const now = Date.now();\n        const plays = recentPlays.get(walletAddress) || [];\n        // Clean old entries\n        const recentPlaysList = plays.filter((play)=>now - play.timestamp < RATE_LIMIT.timeWindow);\n        if (recentPlaysList.length >= RATE_LIMIT.maxPlays) {\n            throw new Error(\"Rate limit exceeded. Please wait before playing again.\");\n        }\n        recentPlaysList.push({\n            timestamp: now\n        });\n        recentPlays.set(walletAddress, recentPlaysList);\n    }, []);\n    const validatePlay = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)((betAmount, playerBalance)=>{\n        if (isGamePaused) {\n            throw new Error(\"Game is currently paused for maintenance\");\n        }\n        if (suspiciousWallets.has(publicKey.toString())) {\n            throw new Error(\"Account restricted. Please contact support.\");\n        }\n        if (betAmount < RATE_LIMIT.minBet) {\n            throw new Error(\"Minimum bet is \".concat(RATE_LIMIT.minBet, \" TAIL\"));\n        }\n        if (betAmount > RATE_LIMIT.maxBet) {\n            throw new Error(\"Maximum bet is \".concat(RATE_LIMIT.maxBet, \" TAIL\"));\n        }\n        if (betAmount > playerBalance) {\n            throw new Error(\"Insufficient TAIL balance\");\n        }\n        // Check for pending transactions\n        if (pendingTransactions.has(publicKey.toString())) {\n            throw new Error(\"Please wait for your previous game to complete\");\n        }\n        // Rate limit check\n        checkRateLimit(publicKey.toString());\n        return true;\n    }, [\n        checkRateLimit,\n        publicKey,\n        isGamePaused\n    ]);\n    const trackWin = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(async (signature, amount, jackpotAmount)=>{\n        const winData = {\n            date: new Date().toISOString(),\n            playerAddress: publicKey.toString(),\n            betAmount: amount,\n            winAmount: jackpotAmount,\n            signature: signature,\n            status: \"pending_payout\"\n        };\n        // Save pending win\n        const wins = JSON.parse(localStorage.getItem(\"pending_wins\") || \"[]\");\n        wins.push(winData);\n        localStorage.setItem(\"pending_wins\", JSON.stringify(wins));\n    // Could add webhook or other notification here\n    }, [\n        publicKey\n    ]);\n    const handleGameError = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(async (error, betAmount)=>{\n        console.error(\"Game Error:\", error);\n        // Track repeated errors from same wallet\n        const errorCount = parseInt(localStorage.getItem(\"error_count_\".concat(publicKey)) || \"0\") + 1;\n        localStorage.setItem(\"error_count_\".concat(publicKey), errorCount);\n        // If too many errors, mark wallet as suspicious\n        if (errorCount > 10) {\n            suspiciousWallets.add(publicKey.toString());\n        }\n        // If transaction was sent but confirmation failed\n        if (error.message.includes(\"confirmation timeout\")) {\n            alert(\"Transaction status unclear. Please check your wallet history \" + \"before playing again. If the transaction failed, try again in a few minutes.\");\n            return;\n        }\n        // For other errors\n        alert(\"Error playing game. Please try again. If the problem persists, \" + \"contact support with this error ID: \" + Date.now());\n    }, [\n        publicKey\n    ]);\n    // Initialize Tatum SDK\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        const initTatum = async ()=>{\n            const tatumInstance = await _tatumio_tatum__WEBPACK_IMPORTED_MODULE_3__.TatumSDK.init({\n                network: \"solana-mainnet\",\n                apiKey: \"t-661060efe32260001c2ac47c-afb1cd5c90d74a28817facba\",\n                config: {\n                    retryCount: 3,\n                    retryDelay: 1000\n                }\n            });\n            setTatum(tatumInstance);\n        };\n        initTatum();\n        return ()=>{\n            if (tatum) tatum.destroy();\n        };\n    }, []);\n    // Save state to localStorage\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        if (true) {\n            localStorage.setItem(\"tailhodler_betAmount\", betAmount.toString());\n            localStorage.setItem(\"tailhodler_gameHistory\", JSON.stringify(gameHistory));\n        }\n    }, [\n        betAmount,\n        gameHistory\n    ]);\n    const getTokenBalance = async ()=>{\n        if (!publicKey || !tatum) return;\n        try {\n            const tokenMint = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey(TAIL_TOKEN_ADDRESS);\n            const tokenAccount = await (0,_solana_spl_token__WEBPACK_IMPORTED_MODULE_12__.getAssociatedTokenAddress)(tokenMint, publicKey);\n            const lobbyTokenAccount = await (0,_solana_spl_token__WEBPACK_IMPORTED_MODULE_12__.getAssociatedTokenAddress)(tokenMint, new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey(LOBBY_WALLET_ADDRESS));\n            try {\n                const jackpotAccountInfo = await (0,_solana_spl_token__WEBPACK_IMPORTED_MODULE_12__.getAccount)(connection, lobbyTokenAccount);\n                setJackpotBalance(Number(jackpotAccountInfo.amount) / DECIMAL_MULTIPLIER);\n            } catch (e) {\n                console.error(\"Error getting jackpot balance:\", e);\n                setJackpotBalance(0);\n            }\n            try {\n                const accountInfo = await (0,_solana_spl_token__WEBPACK_IMPORTED_MODULE_12__.getAccount)(connection, tokenAccount);\n                setBalance(Number(accountInfo.amount) / DECIMAL_MULTIPLIER);\n            } catch (e) {\n                console.error(\"Error getting token balance:\", e);\n                setBalance(0);\n            }\n        } catch (error) {\n            console.error(\"Error:\", error);\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        if (publicKey && tatum) {\n            getTokenBalance();\n            const interval = setInterval(getTokenBalance, 10000);\n            return ()=>clearInterval(interval);\n        }\n    }, [\n        publicKey,\n        tatum\n    ]);\n    const addToHistory = (signature, outcome, amount)=>{\n        const newEntry = {\n            signature,\n            outcome,\n            amount,\n            timestamp: new Date().toLocaleTimeString(),\n            date: new Date().toLocaleDateString()\n        };\n        setGameHistory((prev)=>[\n                newEntry,\n                ...prev\n            ].slice(0, 10));\n    };\n    const getJackpotPercentage = (amount)=>{\n        switch(amount){\n            case 100:\n                return 0.1;\n            case 1000:\n                return 0.3;\n            case 10000:\n                return 0.6;\n            case 100000:\n                return 1.0;\n            default:\n                return 0;\n        }\n    };\n    const playGame = async ()=>{\n        try {\n            // Validate play before processing\n            validatePlay(betAmount, balance);\n            setIsProcessing(true);\n            // First, validate with server\n            const validateResponse = await fetch(\"\".concat(API_URL, \"/play/validate\"), {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    wallet: publicKey.toString(),\n                    betAmount\n                })\n            });\n            if (!validateResponse.ok) {\n                const error = await validateResponse.json();\n                if (error.isPendingJackpot) {\n                    setJackpotPendingInfo({\n                        winner: error.winner,\n                        amount: error.amount,\n                        timestamp: error.timestamp\n                    });\n                    throw new Error(\"\\uD83C\\uDF89 Jackpot verification in progress! Game paused while processing the last big win! \\uD83C\\uDF89\");\n                }\n                throw new Error(error.error || \"Failed to validate play\");\n            }\n            const { outcome, timestamp } = await validateResponse.json();\n            // Process transaction\n            try {\n                const tokenMint = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey(TAIL_TOKEN_ADDRESS);\n                const userTokenAccount = await (0,_solana_spl_token__WEBPACK_IMPORTED_MODULE_12__.getAssociatedTokenAddress)(tokenMint, publicKey);\n                const lobbyTokenAccount = await (0,_solana_spl_token__WEBPACK_IMPORTED_MODULE_12__.getAssociatedTokenAddress)(tokenMint, new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey(LOBBY_WALLET_ADDRESS));\n                const transferInstruction = (0,_solana_spl_token__WEBPACK_IMPORTED_MODULE_12__.createTransferInstruction)(userTokenAccount, lobbyTokenAccount, publicKey, BigInt(Math.floor(betAmount * DECIMAL_MULTIPLIER)));\n                const transaction = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.Transaction().add(transferInstruction);\n                const { blockhash } = await connection.getLatestBlockhash(\"confirmed\");\n                transaction.recentBlockhash = blockhash;\n                transaction.feePayer = publicKey;\n                const signature = await sendTransaction(transaction, connection);\n                console.log(\"Transaction sent:\", signature);\n                let confirmed = false;\n                let retries = 30;\n                while(!confirmed && retries > 0){\n                    try {\n                        var _response_value, _response;\n                        const response = await connection.getSignatureStatus(signature);\n                        if (((_response = response) === null || _response === void 0 ? void 0 : (_response_value = _response.value) === null || _response_value === void 0 ? void 0 : _response_value.confirmationStatus) === \"confirmed\") {\n                            confirmed = true;\n                            break;\n                        }\n                    } catch (e) {\n                        console.warn(\"Error checking signature status:\", e);\n                    }\n                    retries--;\n                    await new Promise((resolve)=>setTimeout(resolve, 1000));\n                }\n                if (!confirmed) {\n                    throw new Error(\"Transaction confirmation timeout\");\n                }\n                // Confirm result with server\n                const confirmResponse = await fetch(\"\".concat(API_URL, \"/play/confirm\"), {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                        wallet: publicKey.toString(),\n                        signature,\n                        outcome,\n                        betAmount,\n                        timestamp\n                    })\n                });\n                if (!confirmResponse.ok) {\n                    throw new Error(\"Failed to confirm play result\");\n                }\n                if (outcome === \"jackpot\") {\n                    const winAmount = jackpotBalance * getJackpotPercentage(betAmount);\n                    await trackWin(signature, betAmount, winAmount);\n                }\n                setResult(outcome);\n                addToHistory(signature, outcome, betAmount);\n                await getTokenBalance();\n            } catch (txError) {\n                console.error(\"Transaction error:\", txError);\n                throw new Error(\"Transaction failed: \".concat(txError.message));\n            }\n        } catch (error) {\n            console.error(\"Game error:\", error);\n            // Format user-friendly error message\n            let userMessage = \"An error occurred while playing. Please try again.\";\n            if (error.message.includes(\"insufficient balance\")) {\n                userMessage = \"Insufficient TAIL balance for this bet.\";\n            } else if (error.message.includes(\"wait\") && error.message.includes(\"seconds\")) {\n                // Extract wait time from error message if available\n                const waitMatch = error.message.match(/wait (\\d+) seconds/);\n                if (waitMatch) {\n                    const waitTime = parseInt(waitMatch[1]);\n                    setCooldownTime(waitTime);\n                    userMessage = \"Please wait \".concat(waitTime, \" seconds before playing again.\");\n                } else {\n                    setCooldownTime(5); // Default to 5 seconds if no specific time found\n                    userMessage = \"Please wait 5 seconds before playing again.\";\n                }\n            } else if (error.message.includes(\"confirmation timeout\")) {\n                userMessage = \"Transaction is taking longer than expected. Please check your wallet history before playing again.\";\n            } else if (error.message.includes(\"Active game in progress\")) {\n                userMessage = \"You have an active game in progress. Please wait for it to complete.\";\n            }\n            alert(userMessage);\n        } finally{\n            setIsProcessing(false);\n        }\n    };\n    const handleClearHistory = ()=>{\n        setGameHistory([]);\n        localStorage.removeItem(\"tailhodler_gameHistory\");\n    };\n    // Add useEffect for cooldown timer\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        let timer;\n        if (cooldownTime > 0) {\n            timer = setInterval(()=>{\n                setCooldownTime((prev)=>Math.max(0, prev - 1));\n            }, 1000);\n        }\n        return ()=>clearInterval(timer);\n    }, [\n        cooldownTime\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        style: {\n            background: \"#141414\",\n            borderRadius: \"16px\",\n            padding: \"2rem\",\n            maxWidth: \"480px\",\n            width: \"100%\",\n            margin: \"0 auto\",\n            color: \"#FFFFFF\",\n            border: \"1px solid rgba(0, 246, 255, 0.1)\",\n            boxShadow: \"0 8px 32px rgba(0, 0, 0, 0.4)\"\n        },\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_game_AdminControls__WEBPACK_IMPORTED_MODULE_10__[\"default\"], {\n                publicKey: publicKey,\n                setIsGamePaused: setIsGamePaused\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\linas\\\\Desktop\\\\wallet balance plus jacpot\\\\game-token-system\\\\client\\\\src\\\\components\\\\TokenToss.js\",\n                lineNumber: 414,\n                columnNumber: 13\n            }, undefined),\n            isGamePaused && jackpotPendingInfo && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                style: {\n                    background: \"linear-gradient(45deg, #FFD700 0%, #FFA500 100%)\",\n                    color: \"#000000\",\n                    padding: \"1rem\",\n                    borderRadius: \"8px\",\n                    marginBottom: \"1rem\",\n                    textAlign: \"center\",\n                    animation: \"pulse 2s infinite\",\n                    border: \"1px solid rgba(255, 215, 0, 0.5)\",\n                    boxShadow: \"0 0 20px rgba(255, 215, 0, 0.3)\"\n                },\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        style: {\n                            fontSize: \"1.25rem\",\n                            fontWeight: \"bold\",\n                            marginBottom: \"0.5rem\"\n                        },\n                        children: \"\\uD83C\\uDF89 Jackpot Won! \\uD83C\\uDF89\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\linas\\\\Desktop\\\\wallet balance plus jacpot\\\\game-token-system\\\\client\\\\src\\\\components\\\\TokenToss.js\",\n                        lineNumber: 431,\n                        columnNumber: 21\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        style: {\n                            fontSize: \"0.875rem\",\n                            opacity: 0.9\n                        },\n                        children: \"Game paused while verifying the last big win!\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\linas\\\\Desktop\\\\wallet balance plus jacpot\\\\game-token-system\\\\client\\\\src\\\\components\\\\TokenToss.js\",\n                        lineNumber: 434,\n                        columnNumber: 21\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        style: {\n                            fontSize: \"0.875rem\",\n                            opacity: 0.9,\n                            marginTop: \"0.5rem\"\n                        },\n                        children: \"Please wait while we process this exciting moment!\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\linas\\\\Desktop\\\\wallet balance plus jacpot\\\\game-token-system\\\\client\\\\src\\\\components\\\\TokenToss.js\",\n                        lineNumber: 437,\n                        columnNumber: 21\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\linas\\\\Desktop\\\\wallet balance plus jacpot\\\\game-token-system\\\\client\\\\src\\\\components\\\\TokenToss.js\",\n                lineNumber: 420,\n                columnNumber: 17\n            }, undefined),\n            isGamePaused && !jackpotPendingInfo && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                style: {\n                    background: \"#FF355D\",\n                    color: \"white\",\n                    padding: \"1rem\",\n                    borderRadius: \"8px\",\n                    marginBottom: \"1rem\",\n                    textAlign: \"center\"\n                },\n                children: \"Game is currently paused for maintenance\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\linas\\\\Desktop\\\\wallet balance plus jacpot\\\\game-token-system\\\\client\\\\src\\\\components\\\\TokenToss.js\",\n                lineNumber: 444,\n                columnNumber: 17\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_game_GameAnimations__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {}, void 0, false, {\n                fileName: \"C:\\\\Users\\\\linas\\\\Desktop\\\\wallet balance plus jacpot\\\\game-token-system\\\\client\\\\src\\\\components\\\\TokenToss.js\",\n                lineNumber: 455,\n                columnNumber: 13\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_game_GameHeader__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {}, void 0, false, {\n                fileName: \"C:\\\\Users\\\\linas\\\\Desktop\\\\wallet balance plus jacpot\\\\game-token-system\\\\client\\\\src\\\\components\\\\TokenToss.js\",\n                lineNumber: 456,\n                columnNumber: 13\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_game_GameResult__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n                result: result,\n                jackpotBalance: jackpotBalance,\n                getJackpotPercentage: getJackpotPercentage,\n                betAmount: betAmount,\n                onPlayAgain: ()=>setResult(\"\")\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\linas\\\\Desktop\\\\wallet balance plus jacpot\\\\game-token-system\\\\client\\\\src\\\\components\\\\TokenToss.js\",\n                lineNumber: 458,\n                columnNumber: 13\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_game_JackpotDisplay__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                jackpotBalance: jackpotBalance\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\linas\\\\Desktop\\\\wallet balance plus jacpot\\\\game-token-system\\\\client\\\\src\\\\components\\\\TokenToss.js\",\n                lineNumber: 466,\n                columnNumber: 13\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_game_GameControls__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                betAmount: betAmount,\n                setBetAmount: setBetAmount,\n                jackpotBalance: jackpotBalance,\n                playGame: playGame,\n                isProcessing: isProcessing,\n                publicKey: publicKey,\n                tatum: tatum,\n                isGamePaused: isGamePaused,\n                cooldownTime: cooldownTime\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\linas\\\\Desktop\\\\wallet balance plus jacpot\\\\game-token-system\\\\client\\\\src\\\\components\\\\TokenToss.js\",\n                lineNumber: 468,\n                columnNumber: 13\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_game_GameHistory__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                gameHistory: gameHistory,\n                onClearHistory: handleClearHistory\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\linas\\\\Desktop\\\\wallet balance plus jacpot\\\\game-token-system\\\\client\\\\src\\\\components\\\\TokenToss.js\",\n                lineNumber: 480,\n                columnNumber: 13\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\linas\\\\Desktop\\\\wallet balance plus jacpot\\\\game-token-system\\\\client\\\\src\\\\components\\\\TokenToss.js\",\n        lineNumber: 403,\n        columnNumber: 9\n    }, undefined);\n};\n_s(TokenToss, \"ONChcDp5+U8j46utcqaU8HYkY90=\", false, function() {\n    return [\n        _solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_11__.useWallet,\n        _solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_11__.useConnection\n    ];\n});\n_c = TokenToss;\n/* harmony default export */ __webpack_exports__[\"default\"] = (TokenToss);\nvar _c;\n$RefreshReg$(_c, \"TokenToss\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/TokenToss.js\n"));

/***/ })

});